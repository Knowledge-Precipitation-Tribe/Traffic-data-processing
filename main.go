package main

import (
	"fmt"
	"strings"
)

/**
* @Author: super
* @Date: 2020-09-15 20:04
* @Description:
**/

func main() {
	str := `MULTILINESTRING((104.04799 30.68351,104.0478399 30.68348,104.04735 30.68337),(104.04862 30.68365,104.04847 30.68362,104.04815 30.68355,104.04799 30.68351),(104.04896 30.68373,104.04862 30.68365),(104.04909 30.68376,104.04896 30.68373),(104.04922 30.68379,104.04909 30.68376),(104.0498 30.68391,104.04922 30.68379),(104.0498 30.68391,104.05021 30.684),(104.05108 30.68418,104.05021 30.684),(104.05127 30.68422,104.05108 30.68418),(104.05149 30.68427,104.05127 30.68422),(104.05408 30.68481,104.05322 30.68463,104.05299 30.68458,104.05234 30.68445,104.05226 30.68443,104.0517 30.68431,104.05149 30.68427),(104.05408 30.68481,104.05441 30.68487),(104.05441 30.68487,104.05456 30.6849),(104.05456 30.6849,104.0551 30.68501),(104.0551 30.68501,104.05621 30.68523),(104.05621 30.68523,104.05695 30.68537),(104.05695 30.68537,104.05718 30.68542),(104.05718 30.68542,104.0578 30.68556,104.05809 30.68563),(104.05809 30.68563,104.05833 30.68568,104.05849 30.68572,104.05861 30.68575),(104.05861 30.68575,104.05901 30.68583),(104.05901 30.68583,104.05911 30.68585),(104.05911 30.68585,104.05925 30.68588,104.05936 30.68589,104.0594497 30.685896),(104.0594497 30.685896,104.05959 30.68591,104.05965 30.68591),(104.05965 30.68591,104.05987 30.68591),(104.05987 30.68591,104.05992 30.68591),(104.05992 30.68591,104.06014 30.6859),(104.06014 30.6859,104.06085 30.6859),(104.06085 30.6859,104.06108 30.6859),(104.06108 30.6859,104.06207 30.68589),(104.06207 30.68589,104.0628 30.68589,104.06303 30.68588),(104.06303 30.68588,104.065 30.68587),(104.065 30.68587,104.06523 30.68587),(104.06523 30.68587,104.06617 30.68585),(104.06628 30.68585,104.06617 30.68585),(104.06628 30.68585,104.06653 30.68585),(104.06653 30.68585,104.06723 30.68585),(104.06723 30.68585,104.06731 30.68585),(104.0696549 30.6858275,104.07061 30.68582),(104.07061 30.68582,104.07138 30.68581),(104.07138 30.68581,104.0719 30.6858),(104.0719 30.6858,104.07213 30.6858),(104.07213 30.6858,104.07262 30.6858,104.07303 30.68579),(104.07303 30.68579,104.07315 30.68578),(104.07326 30.68577,104.0732 30.68578,104.07315 30.68578),(104.07452 30.68541,104.07445 30.68543,104.07399 30.68558,104.07359 30.68572,104.07326 30.68577),(104.0757524 30.6849525,104.07504 30.68523,104.07452 30.68541),(104.07671 30.68464,104.0757524 30.6849525),(104.07774 30.68428,104.07671 30.68464),(104.07845 30.68402,104.07774 30.68428),(104.07845 30.68402,104.07874 30.68392),(104.07874 30.68392,104.079 30.68383),(104.079 30.68383,104.07966 30.68359),(104.07966 30.68359,104.08033 30.68335),(104.08033 30.68335,104.08181 30.68281,104.08189 30.68278),(104.08189 30.68278,104.08213 30.68269),(104.08213 30.68269,104.083 30.68235),(104.083 30.68235,104.08311 30.68231),(104.08311 30.68231,104.08398 30.68198),(104.08398 30.68198,104.08434 30.68184),(104.08434 30.68184,104.08442 30.68181),(104.08442 30.68181,104.08505 30.68152,104.08517 30.68146),(104.08517 30.68146,104.08598 30.68107),(104.08598 30.68107,104.08678 30.68068),(104.08678 30.68068,104.08712 30.68051),(104.08712 30.68051,104.088 30.68008),(104.088 30.68008,104.0883 30.67993),(104.0883 30.67993,104.08837 30.6799),(104.08837 30.6799,104.08877 30.67971),(104.08877 30.67971,104.08885 30.67967),(104.08885 30.67967,104.08969 30.67927),(104.08969 30.67927,104.08977 30.67923),(104.08977 30.67923,104.09009 30.67907,104.09038 30.67894),(104.09038 30.67894,104.09056 30.67884,104.09071 30.67877),(104.09071 30.67877,104.09162 30.67833),(104.09162 30.67833,104.09169 30.6783,104.09209 30.6781),(104.09209 30.6781,104.09286 30.67772),(104.09286 30.67772,104.0929 30.6777),(104.0929 30.6777,104.0938277 30.677256),(104.0938277 30.677256,104.0939525 30.6771913),(104.0939525 30.6771913,104.0940799 30.6771266),(104.0940799 30.6771266,104.09422 30.67705,104.0942979 30.6770188),(104.0942979 30.6770188,104.0943988 30.6769565,104.0944169 30.6769403,104.0944315 30.6769224,104.0944905 30.6767895),(104.0945075 30.6766616,104.0944952 30.6767226,104.0944905 30.6767895),(104.0945321 30.6765788,104.0945221 30.676598,104.0945144 30.6766192,104.0945075 30.6766616),(104.0949 30.67639,104.09484 30.6764,104.09475 30.67642,104.09467 30.67647,104.09464 30.67648,104.09461 30.67649,104.09459 30.67651,104.0945321 30.6765788),(104.09506 30.67642,104.09501 30.6764,104.09496 30.67639,104.0949 30.67639))`
	//fmt.Println(str)
	geoms := ParseGeom(str)
	fmt.Println(geoms)
	fmt.Println(geoms[1])
	fmt.Println(geoms[2])
	fmt.Println(geoms[3])
	fmt.Println(geoms[4])
}


func ParseGeom(str string) []string{
	if strings.HasPrefix(str, "MULTILINESTRING"){
		l := len(str)
		str = str[17:l-2]
		return strings.Split(str, "),(")
	}
	return nil
}

